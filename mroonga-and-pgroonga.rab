= Mroonga・PGroongaを使った\n全文検索システムの実装方法

: author
   須藤功平
: institution
   株式会社クリアコード
: content-source
   MySQL・PostgreSQL上で動かす全文検索エンジン「Groonga」セミナー
: date
   2017-08-01
: allotted-time
   110m
: theme
   .

= 全文検索システム\n対象

(('tag:center'))
(('tag:large'))
(('tag:margin-bottom * 2'))
大量のテキスト

  * 例：Wikiのデータ
  * 例：オフィス文書のテキスト
  * 例：商品説明・口コミ

= 全文検索システム\n目的

  * 必要な情報を
  * 必要なときに
  * 活用

= 必要な情報を活用

  * ×
    * 探している情報が見つからない
  * ○
    * 探している情報が見つかる
  * ◎
    * 意識していなかったけど\n
      ((*実は欲しかった*))情報も見つかる！

= 必要なときに活用

  * ×
    * なかなか見つからない
  * ○
    * すぐに見つかる
  * ◎
    * すでに見つかっていた
    * 例：レコメンデーション

= 実装方法\n選択肢

  * 全文検索サーバーを使う
  * RDBMSを使う
    * MySQL・MariaDB・PostgreSQLを使う

= 全文検索サーバー案\nメリット

  * 必要な機能が揃っている
  * +αの機能もある
  * 速い

= 全文検索サーバー案\nデメリット

  * 実装コスト大
    * それぞれ独自の使い方だから
    * マスターデータの同期はどうする？
  * メンテナンスコスト大
    * それぞれ独自の仕組みだから

= RDBMS案\nメリット

  * 実装コスト小
    * 新しく覚えることが少ない
    * データの一元管理
  * メンテナンスコスト小
    * 既存の運用ノウハウを使える

= RDBMS案\nデメリット

  * 組込機能では機能不足
  * SQLの表現力不足
    * 1クエリーで実現できない機能アリ
    * ↑は性能を出しにくい

= 実現方法\n第3の選択肢

  * RDBMS経由（SQL）で\n
    全文検索エンジンを使う

= メリット

  * 高速で豊富な機能
  * 実装コスト小
  * メンテナンスコスト小

= デメリット

  * RDBMSに拡張機能が必要
    * DBaaSで使えない

= オススメの選択肢\n全文検索の知識ナシ

  * まだ単純な機能で十分
    * データ少：RDBMS単独でLIKE\n
      (('note:（数十万件とか）'))
    * データ中：RDBMS組込全文検索機能
  * いまどきの全文検索機能が必要
    * RDBMS経由で全文検索エンジン

= オススメの選択肢\n全文検索の知識アリ

  * カリカリにチューニングしたい
    * RDBMSと全文検索サーバーを併用
  * それ以外
    * RDBMS経由で全文検索エンジン

= 説明する選択肢

RDBMS経由で\n
全文検索\n
エンジン

= 全文検索エンジン\nGroonga（ぐるんが）

  * 組込可能な全文検索エンジン
    * MySQL・MariaDBに組込→Mroonga
    * PostgreSQLに組込→PGoonga
  * 全文検索サーバーとして\n
    単独でも使用可能
    * RDBMSと全文検索サーバーを併用\n
      もできる

= Mroonga（むるんが）

  * MySQLのストレージエンジン
    * InnoDB・MyISAMなどと同じレイヤー
  * 使用方法
    * (({CREATE TABLE (...) ENGINE=Mroonga}))

== スライドプロパティ

: groonga-product

   mroonga

= MySQL組込の全文検索機能

  * MySQL：5.7から使える
    * InnoDB＋日本語対応パーサー
  * MariaDB：10.0.15から使える
    * Mroongaをバンドル

== スライドプロパティ

: groonga-product

   mroonga

= 全文検索機能：基本

  # RT

  , InnoDB, Mroonga

  AND/OR/NOT対応,○,○
  ハイライト,×,○
  周辺テキスト表示,×,○

== スライドプロパティ

: groonga-product

   mroonga

= ハイライト\n周辺テキスト表示

  # image
  # src = images/php-document-search-search.png
  # relative_height = 100

== スライドプロパティ

: groonga-product

   mroonga

= 全文検索機能：高度な機能

  # RT

  , InnoDB, Mroonga

  入力補完,×,○
  類似文書検索,○,○
  クエリー展開,○,○

== スライドプロパティ

: groonga-product

   mroonga

= 全文検索性能の違い\n計測データ

  * 対象：Wikipedia日本語版
  * レコード数：約185万件
  * データサイズ：約7GB
  * メモリー4GB・SSD250GB(('note:（ConoHa）'))

== スライドプロパティ

: groonga-product

   mroonga

= 検索性能1

(('tag:center'))
キーワード：テレビアニメ\n
(('note:（ヒット数：約2万3千件）'))

  # RT
  delimiter = [|]

  InnoDB ngram | 3m2s
  InnoDB MeCab | 6m20s
  Mroonga:((*1*)) | 0.11s

== スライドプロパティ

: groonga-product

   mroonga

= 検索性能2

(('tag:center'))
キーワード：データベース\n
(('note:（ヒット数：約1万7千件）'))

  # RT
  delimiter = [|]

  InnoDB ngram | 36s
  InnoDB MeCab:((*1*)) | 0.03s
  Mroonga:((*2*)) | 0.09s

== スライドプロパティ

: groonga-product

   mroonga

= 検索性能3

(('tag:center'))
キーワード：PostgreSQL OR MySQL\n
(('note:（ヒット数：約400件）'))

  # RT
  delimiter = [|]

  InnoDB ngram | N/A(Error)
  InnoDB MeCab:((*1*)) | 0.005s
  Mroonga:((*2*)) | 0.028s

== スライドプロパティ

: groonga-product

   mroonga

= 検索性能4

(('tag:center'))
キーワード：日本\n
(('note:（ヒット数：約63万件）'))

  # RT
  delimiter = [|]

  InnoDB ngram | 1.3s
  InnoDB MeCab | 1.3s
  Mroonga:((*1*)) | 0.21s

== スライドプロパティ

: groonga-product

   mroonga

= 検索性能まとめ

  * Mroonga：安定して速い
    * ((*SQLで使えて機能豊富で速い！*))
  * InnoDB FTS MeCab
    * ハマれば速い
  * InnoDB FTS ngram
    * 安定して遅い

== スライドプロパティ

: groonga-product

   mroonga

= 全文検索システムの実装\nMroonga

  * 全文検索
  * キーワードハイライト
  * 周辺テキスト表示
  * オートコンプリート
  * 関連文書の表示

== スライドプロパティ

: groonga-product

   mroonga

= 全文検索

  # image
  # src = images/php-document-search-search.png
  # relative_height = 100

== スライドプロパティ

: groonga-product

   mroonga

= テーブル定義

  # coderay sql

  CREATE TABLE entries (
    title text,
    content text,
    -- 全文検索用インデックス
    -- よくわからないならデフォルトのまま使うこと！
    FULLTEXT INDEX (title, content)
  ) ENGINE=Mroonga
    DEFAULT CHARSET=utf8mb4;

== スライドプロパティ

: groonga-product

   mroonga

= データ挿入

  # coderay sql

  -- 普通に挿入するだけでよい
  INSERT INTO entries
    VALUES ('タイトル',
            '高速に全文検索したいですね！');

== スライドプロパティ

: groonga-product

   mroonga

= 全文検索

  # coderay sql

  SELECT title FROM entries
    WHERE -- MATCH AGAINSTで全文検索
      MATCH (title, content)
      -- デフォルトORがMySQLの仕様
      -- 「検索」または「高速」を含むとマッチ
      AGAINST ('検索 高速'
               IN BOOLEAN MODE);

== スライドプロパティ

: groonga-product

   mroonga

= AND全文検索

  # coderay sql

  MATCH (title, content)
  -- 各キーワードの前に「+」をつけるとAND
  -- 「検索」かつ「高速」を含むとマッチ
  AGAINST ('+検索 +高速'
           IN BOOLEAN MODE);

== スライドプロパティ

: groonga-product

   mroonga

= 使いやすいAND全文検索

  # coderay sql

  MATCH (title, content)
  -- 最初に「*D+」をつけるとデフォルトAND
  -- Mroonga独自機能
  -- 「検索」かつ「高速」を含むとマッチ
  AGAINST ('*D+ 検索 高速'
           IN BOOLEAN MODE);

== スライドプロパティ

: groonga-product

   mroonga

= ハイライト

  # image
  # src = images/php-document-search-search.png
  # relative_height = 100

== スライドプロパティ

: groonga-product

   mroonga

= ハイライト

  # coderay sql

  SELECT mroonga_highlight_html(
           title, '*D+ 検索 高速' AS query)
    -- クエリーからハイライト対象のキーワードを抽出
    FROM entries
    WHERE
      MATCH (title, content)
      AGAINST ('*D+ 検索 高速' IN BOOLEAN MODE);

== スライドプロパティ

: groonga-product

   mroonga

= ハイライト結果例

  # coderay html

  <Groonga>で高速全文検索！
  ↓
  &lt;Groonga&gt;で ← タグをエスケープ
  <span class="keyword">高速</span>
  全文 ↑↓キーワードはclass付け
  <span class="keyword">検索</span>！

== スライドプロパティ

: groonga-product

   mroonga

= 周辺テキスト

  # image
  # src = images/php-document-search-search.png
  # relative_height = 100

== スライドプロパティ

: groonga-product

   mroonga

= 周辺テキスト

  # coderay sql

  SELECT mroonga_snippet_html(
           content, '*D+ 検索 高速' AS query)
    -- クエリーから対象のキーワードを抽出
    FROM entries
    WHERE
      MATCH (title, content)
      AGAINST ('*D+ 検索 高速' IN BOOLEAN MODE);

== スライドプロパティ

: groonga-product

   mroonga

= 周辺テキスト結果例

  # coderay html

  ...<Groonga>で高速全文検索！...
  ↓
  <div class="snippet"> ←1つ目
  ga&gt;で ←タグをエスケープ
  <span class="keyword">高速</span>
  全文 ↑↓キーワードはclass付け
  <span class="keyword">検索/span>！
  </div>
  <div class="snippet">...</div> ←2つ目

== スライドプロパティ

: groonga-product

   mroonga

= 類似文書検索

  * 検索クエリーは文書そのもの
    * キーワードではない
  * 関連エントリーの提示に使える
    * メタデータがあるなら組み合わせる\n
      →精度向上
    * メタデータ：タグ・行動履歴など

== スライドプロパティ

: groonga-product

   mroonga

= 類似文書検索\nインデックス定義

  # coderay sql

  CREATE TABLE entries (
    -- ...
    FULLTEXT INDEX (content)
      -- TokenMecabを使わないと精度がでない
      -- 必要なときだけカスタマイズ！
      COMMENT 'tokenizer "TokenMecab"'
  ) -- ...

== スライドプロパティ

: groonga-product

   mroonga

= 類似文書検索\n検索方法

  # coderay sql

  SELECT title
    FROM entries
    WHERE
      MATCH (content)
      ↓ 既存文書を内容をそのまま指定
      AGAINST ('...Groongaで高速全文検索！...'
               IN NATURAL LANGUAGE MODE);

== スライドプロパティ

: groonga-product

   mroonga

= 類似文書検索\n結果例

  クエリー：
     ...Groongaで高速全文検索！...

  ヒット例：
     ...Mroongaで高速全文検索！...

== スライドプロパティ

: groonga-product

   mroonga

= PGroonga\n（ぴーじーるんが）

  * PostgreSQLのインデックス
    * B-tree・GINなどと同じレイヤー
  * 使用方法
    * (({CREATE INDEX ...}))\n
      (({USING PGroonga ...}))

== スライドプロパティ

: groonga-product

   pgroonga

= PostgreSQLの全文検索機能

  * textsearch（組込）
    * 言語依存
    * 日本語対応はメンテされていない
  * pg_trgm（同梱）
    * 言語非依存：が、ほぼ日本語非対応
  * pg_bigm（サードパーティー）
    * 言語非依存：日本語対応

== スライドプロパティ

: groonga-product

   pgroonga

= 全文検索機能：基本

  # RT

  , pg_bigm, PGroonga

  AND/OR/NOT対応,△※1,○
  ハイライト,△※2,○
  周辺テキスト表示,△※2,○

(('note:※1 SQLでAND/OR/NOTを組み合わせると実現可能'))

(('note:※2 PostgreSQLが提供する関数で実現可能。ただし、結果をHTMLで出力する用途では使えない。'))

== スライドプロパティ

: groonga-product

   pgroonga

= 全文検索機能：高度な機能

  # RT

  , pg_bigm, PGroonga

  入力補完,×,○
  類似文書検索,△※,○
  クエリー展開,×,○

(('note:※ 類似文書検索と言うよりはあいまい検索。'))

== スライドプロパティ

: groonga-product

   pgroonga

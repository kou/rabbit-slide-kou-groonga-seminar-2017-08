= Mroonga・PGroongaを使った\n全文検索システムの実装方法

: author
   須藤功平
: institution
   株式会社クリアコード
: content-source
   MySQL・PostgreSQL上で動かす全文検索エンジン「Groonga」セミナー
: date
   2017-08-01
: allotted-time
   110m
: theme
   .

= 全文検索システム\n対象

(('tag:center'))
(('tag:large'))
(('tag:margin-bottom * 2'))
大量のテキスト

  * 例：Wikiのデータ
  * 例：オフィス文書のテキスト
  * 例：商品説明・口コミ

= 全文検索システム\n目的

  * 必要な情報を
  * 必要なときに
  * 活用

= 必要な情報を活用

  * ×
    * 探している情報が見つからない
  * ○
    * 探している情報が見つかる
  * ◎
    * 意識していなかったけど\n
      ((*実は欲しかった*))情報も見つかる！

= 必要なときに活用

  * ×
    * なかなか見つからない
  * ○
    * すぐに見つかる
  * ◎
    * すでに見つかっていた
    * 例：レコメンデーション

= 実装方法\n選択肢

  * 全文検索サーバーを使う
  * RDBMSを使う
    * MySQL・MariaDB・PostgreSQLを使う

= 全文検索サーバー案\nメリット

  * 必要な機能が揃っている
  * +αの機能もある
  * 速い

= 全文検索サーバー案\nデメリット

  * 実装コスト大
    * それぞれ独自の使い方だから
    * マスターデータの同期はどうする？
  * メンテナンスコスト大
    * それぞれ独自の仕組みだから

= RDBMS案\nメリット

  * 実装コスト小
    * 新しく覚えることが少ない
    * データの一元管理
  * メンテナンスコスト小
    * 既存の運用ノウハウを使える

= RDBMS案\nデメリット

  * 組込機能では機能不足
  * SQLの表現力不足
    * 1クエリーで実現できない機能アリ
    * ↑は性能を出しにくい

= 実現方法\n第3の選択肢

  * RDBMS経由（SQL）で\n
    全文検索エンジンを使う

= メリット

  * 高速で豊富な機能
  * 実装コスト小
  * メンテナンスコスト小

= デメリット

  * RDBMSに拡張機能が必要
    * DBaaSで使えない

= オススメの選択肢\n全文検索の知識ナシ

  * まだ単純な機能で十分
    * データ少：RDBMS単独でLIKE\n
      (('note:（数十万件とか）'))
    * データ中：RDBMS組込全文検索機能
  * いまどきの全文検索機能が必要
    * RDBMS経由で全文検索エンジン

= オススメの選択肢\n全文検索の知識アリ

  * カリカリにチューニングしたい
    * RDBMSと全文検索サーバーを併用
  * それ以外
    * RDBMS経由で全文検索エンジン

= 説明する選択肢

RDBMS経由で\n
全文検索\n
エンジン

= 全文検索エンジン\nGroonga（ぐるんが）

  * 組込可能な全文検索エンジン
    * MySQL・MariaDBに組込→Mroonga
    * PostgreSQLに組込→PGoonga
  * 全文検索サーバーとして\n
    単独でも使用可能

= Mroonga（むるんが）

  * MySQLのストレージエンジン
    * InnoDB・MyISAMなどと同じレイヤー
  * 使用方法
    * (({CREATE TABLE (...) ENGINE=Mroonga}))

= PGroonga\n（ぴーじーるんが）

  * PostgreSQLのインデックス
    * B-tree・GINなどと同じレイヤー
  * 使用方法
    * (({CREATE INDEX ...}))\n
      (({USING PGroonga ...}))
